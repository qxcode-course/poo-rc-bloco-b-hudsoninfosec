{
    "patches": [
        {
            "label": "2025-10-21_15-35-58",
            "content": "@@ -1,40 +1,82 @@\n-cl\n+@@ -3,15 +3,15 @@%0A \n ass \n+%0A-\n Bateria\n-:%0A    def __init__(\n+%0A+Notebok%0A :%250A  %0A@@ -33,71 +33,259 @@%0A \n self\n+%0A-\n , ca\n@@ -86,25 +86,27 @@\n idade: int):\n-%0A\n+%250A\n         self\n@@ -137,16 +137,22 @@\n acidade%0A\n++):%250A\n         \n@@ -154,24 +154,347 @@\n      self.__\n+ligado: bool = False%250A%250A    def ligar(self):%250A        if not self.__ligado:%250A            self.__ligado = True%250A            print(%2522notebook ligado.%2522)%250A        else:%250A            print(%2522erro: notebook j%25C3%25A1 est%25C3%25A1 ligado%2522)%250A%250A    def desligar(self):%0A %250A   %0A@@ -293,164 +293,490 @@%0A     %0A+if %0A self.__%0A-\n carga: int =\n@@ -496,34 +496,38 @@\n int = capacidade\n-%0A%0A\n+%250A%250A\n     def getCapac\n@@ -531,39 +531,43 @@\n pacidade(self) -\n-%3E\n+%253E\n  int:\n-%0A\n+%250A\n         return s\n@@ -586,10 +586,14 @@\n dade\n-%0A%0A\n+%250A%250A\n     \n@@ -616,15 +616,19 @@\n f) -\n-%3E\n+%253E\n  int:\n-%0A\n+%250A\n     \n@@ -655,199 +655,385 @@\n rga%0A\n++ligado:%250A   \n     \n-%0A\n+ \n     \n-def gastar(self, tempo: int):%0A        if tempo %3E self.__carga:%0A            gasto_real = self.__carga%0A            self.__carga = 0%0A            return gasto_real%0A        else:%0A\n+self.__ligado = False%250A            print(%2522notebook desligado.%2522)%250A        else:%250A            print(%2522erro: notebook j%25C3%25A1 est%25C3%25A1 desligado%2522)%250A%250A    def mostrar(self):%250A        status = %2522ligado%2522 if self.__ligado else %2522desligado%2522%250A        print(f%2522O notebook est%25C3%25A1 %257Bstatus%257D.%2522)%250A%250A    def usar(self, tempo):%250A\n         \n     \n@@ -1028,27 +1028,26 @@\n         \n-   \n+if\n  self.__\n carga -=\n@@ -1042,43 +1042,189 @@\n f.__\n-carga -= tempo%0A            return tempo\n+ligado:%250A            print(f%2522Usando o notebook por %257Btempo%257D minutos.%2522)%250A        else:%250A            print(%2522erro: n%25C3%25A3o %25C3%25A9 poss%25C3%25ADvel usar o notebook desligado.%2522)%0A\n",
            "lines": "16"
        },
        {
            "label": "2025-10-27_23-06-30",
            "content": "@@ -507,700 +507,4 @@\n empo\n-%0A    def carregar(self, quantidade: int):%0A        self.__carga += quantidade%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    def mostrar(self):%0A        print(f%22(%7Bself.__carga%7D/%7Bself.__capacidade%7D)%22)%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A    def getPotencia(self):%0A        return self.__potencia%0A    def mostrar(self):%0A        print(f%22(Pot%C3%AAncia %7Bself.__potencia%7D)%22)%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado: bool = False%0A        self.__bateria: Bateria %7C None = None%0A        self.carregador: Carregador %7C None = None%0A    def geBateria(self):%0A        return self.__bateria  \n",
            "lines": "19"
        },
        {
            "label": "2025-10-27_23-11-07",
            "content": "@@ -1203,341 +1203,4 @@\n ia  \n-%0A     def setBateria(self, bateria: Bateria):%0A        self.__bateria = Bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria is not None:%0A            print(%22bateria removida%22)%0A            temp = self.__bateria%0A            self.__bateria = None%0A            return temp%0A        else:%0A            print(%22nenhuma bateria para remover%22)\n",
            "lines": "42"
        },
        {
            "label": "2025-10-27_23-16-45",
            "content": "@@ -1540,102 +1540,4 @@\n er%22)\n-%0A    %0A    def setCarregador(self, carregador: Carregador):%0A        self.__carregador = carregador%0A\n",
            "lines": "53"
        },
        {
            "label": "2025-10-27_23-22-59",
            "content": "@@ -1638,272 +1638,4 @@\n dor%0A\n-        %0A    def ligar(self):%0A        carga = self.__bateria.getCarga() if self.__bateria else 0%0A        if carga %3E 0 or self.__carregador:%0A            self.__ligado = True%0A            print(%22notebook ligado%22)%0A        else:%0A            print(%22n%C3%A3o foi poss%C3%ADvel ligar%22)%0A\n",
            "lines": "56"
        },
        {
            "label": "2025-10-27_23-32-08",
            "content": "@@ -1634,17 +1634,25 @@\n regador%0A\n+        \n %0A\n-\n     def \n@@ -1906,723 +1906,4 @@\n r%22)%0A\n-%0A    def desligar(self):%0A        if self.__ligado:%0A            self.__ligado = False%0A            print(%22notebook desligado%22)%0A%0A    def mostrar(self):%0A        if self.__ligado:%0A            estado = %22Ligado%22%0A        else:%0A            estado = %22Desligado%22%0A%0A        if self.__bateria is None:%0A            bateria_status = %22(Nenhuma)%22%0A        else:%0A            bateria_status = f%22(%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)%22%0A%0A        if self.__carregador is None:%0A            carregador_status = %22(Desconectado)%22%0A        else:%0A            carregador_status = f%22(Pot%C3%AAncia %7Bself.__carregador.getPotencia()%7D)%22%0A%0A        print(%22Status:%22, estado, %22, Bateria:%22, bateria_status, %22, Carregador:%22, carregador_status)\n",
            "lines": "64"
        },
        {
            "label": "2025-10-27_23-33-02",
            "content": "@@ -2617,433 +2617,4 @@\n tus)\n-%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado or self.__bateria is None or self.__bateria.getCarga() == 0:%0A            print(%22erro: ligue o notebook primeiro%22)%0A        else:%0A            gasto = self.__bateria.gastar(tempo)%0A            if gasto %3C tempo:%0A                print(f%22Usando por %7Bgasto%7D minutos%22)%0A                self.__ligado = False%0A            else:%0A                print(f%22Usando por %7Btempo%7D minutos\n",
            "lines": "87"
        },
        {
            "label": "2025-10-27_23-38-18",
            "content": "@@ -2796,28 +2796,254 @@\n )%0A        else:%0A            \n+gasto = self.__bateria.gastar(tempo)%0A            if gasto %3C tempo:%0A                print(f%22Usando por %7Bgasto%7D minutos%22)%0A                self.__ligado = False%0A            else:%0A                print(f%22Usando por %7Btempo%7D minutos\n",
            "lines": "98"
        },
        {
            "label": "2025-10-27_23-39-00",
            "content": "@@ -2820,232 +2820,4 @@\n     \n-gasto = self.__bateria.gastar(tempo)%0A            if gasto %3C tempo:%0A                print(f%22Usando por %7Bgasto%7D minutos%22)%0A                self.__ligado = False%0A            else:%0A                print(f%22Usando por %7Btempo%7D minutos%22)\n",
            "lines": "93"
        },
        {
            "label": "2025-10-27_23-43-06",
            "content": "class Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade: int = capacidade\n        self.__carga: int = capacidade\n\n    def getCapacidade(self) -> int:\n        return self.__capacidade\n\n    def getCarga(self) -> int:\n        return self.__carga\n    \n    def gastar(self, tempo: int):\n        if tempo > self.__carga:\n            gasto_real = self.__carga\n            self.__carga = 0\n            return gasto_real\n        else:\n            self.__carga -= tempo\n            return tempo\n    def carregar(self, quantidade: int):\n        self.__carga += quantidade\n        if self.__carga > self.__capacidade:\n            self.__carga = self.__capacidade\n\n    def mostrar(self):\n        print(f\"({self.__carga}/{self.__capacidade})\")\n\nclass Carregador:\n    def __init__(self, potencia: int):\n        self.__potencia = potencia\n    def getPotencia(self):\n        return self.__potencia\n    def mostrar(self):\n        print(f\"(Pot\u00eancia {self.__potencia})\")\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado: bool = False\n        self.__bateria: Bateria | None = None\n        self.carregador: Carregador | None = None\n    def geBateria(self):\n        return self.__bateria  \n     def setBateria(self, bateria: Bateria):\n        self.__bateria = Bateria\n\n    def rmBateria(self):\n        if self.__bateria is not None:\n            print(\"bateria removida\")\n            temp = self.__bateria\n            self.__bateria = None\n            return temp\n        else:\n            print(\"nenhuma bateria para remover\")\n    \n    def setCarregador(self, carregador: Carregador):\n        self.__carregador = carregador\n\n    def ligar(self):\n        carga = self.__bateria.getCarga() if self.__bateria else 0\n        if carga > 0 or self.__carregador:\n            self.__ligado = True\n            print(\"notebook ligado\")\n        else:\n            print(\"n\u00e3o foi poss\u00edvel ligar\")\n\n    def desligar(self):\n        if self.__ligado:\n            self.__ligado = False\n            print(\"notebook desligado\")\n\n    def mostrar(self):\n        if self.__ligado:\n            estado = \"Ligado\"\n        else:\n            estado = \"Desligado\"\n\n        if self.__bateria is None:\n            bateria_status = \"(Nenhuma)\"\n        else:\n            bateria_status = f\"({self.__bateria.getCarga()}/{self.__bateria.getCapacidade()})\"\n\n        if self.__carregador is None:\n            carregador_status = \"(Desconectado)\"\n        else:\n            carregador_status = f\"(Pot\u00eancia {self.__carregador.getPotencia()})\"\n\n        print(\"Status:\", estado, \", Bateria:\", bateria_status, \", Carregador:\", carregador_status)\n\n    def usar(self, tempo: int):\n        if not self.__ligado or self.__bateria is None or self.__bateria.getCarga() == 0:\n            print(\"erro: ligue o notebook primeiro\")\n        else:\n            gasto = self.__bateria.gastar(tempo)\n            if gasto < tempo:\n                print(f\"Usando por {gasto} minutos\")\n                self.__ligado = False\n            else:\n                print(f\"Usando por {tempo} minutos\")",
            "lines": "98"
        }
    ]
}