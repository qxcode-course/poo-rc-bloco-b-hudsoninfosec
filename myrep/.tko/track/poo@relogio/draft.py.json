{
    "patches": [
        {
            "label": "2025-10-18_00-46-00",
            "content": "@@ -1,1242 +0,0 @@\n-class Watch:%0A    def __init__(self, hora:int = 0, minuto:int = 0, segundo:int = 0):%0A        self.setHoras(hora)%0A        self.setMinutos(minuto)%0A        self.setSegundos(segundo)%0A    %0A    def getHoras(self):%0A        return self._hora%0A    %0A    def getMinuto(self):%0A        return self._minuto%0A    %0A    def getSegundos(self):%0A        return self._segundo%0A    %0A    def setHoras(self, hora):%0A        if 0 %3C= hora %3C= 23:%0A            self._hora = hora%0A        else:%0A            print(%22fail: hora inv%C3%A1lida%22)%0A    %0A    def setMinutos(self, minuto):%0A        if 0 %3C= minuto %3C= 59:%0A            self._minuto = minuto%0A        else:%0A            print(%22fail: minuto inv%C3%A1lido%22)%0A%0A    def setSegundos(self, segundo):%0A        if 0 %3C= segundo %3C= 59:%0A            self._segundo = segundo%0A        else:%0A            print(%22fail: segundo inv%C3%A1lido%22)%0A%0A%0A    def __str__(self):%0A        return f%22%7Bself._hora:02d%7D:%7Bself._minuto:02d%7D:%7Bself._segundo:02d%7D%22%0A    %0A    def NextSecond(self):%0A        self._segundo += 1%0A        if self._segundo == 60:%0A            self._segundo = 0%0A            self._minuto += 1%0A            if self._minuto == 60:%0A                self._minuto = 0%0A                self._hora += 1%0A                if self._hora == 24:%0A                    self._hora = 0\n",
            "lines": "0"
        },
        {
            "label": "2025-10-21_14-55-45",
            "content": "@@ -485,17 +485,17 @@\n hora inv\n-%EC%B9%98\n+%C3%A1\n lida%22)%0A \n@@ -641,25 +641,25 @@\n : minuto inv\n-%EC%B9%98\n+%C3%A1\n lido%22)%0A%0A    \n@@ -803,25 +803,25 @@\n  segundo inv\n-%EC%B9%98\n+%C3%A1\n lido%22)%0A%0A%0A   \n@@ -1201,16 +1201,16 @@\n  == 24:%0A\n+\n         \n@@ -1239,724 +1239,4 @@\n  = 0\n-%0A%0Adef main():%0A    relogio = Watch()%0A%0A    while True:%0A        line = input()%0A        print('$' + line)%0A        args = line.split()%0A%0A        if len(args) == 0:%0A            continue%0A%0A        cmd = args%5B0%5D%0A%0A        if cmd == 'end':%0A            break%0A        elif cmd == 'show':%0A            print(relogio)%0A        elif cmd == 'set':%0A            if len(args) == 4:%0A                relogio.setHoras(int(args%5B1%5D))%0A                relogio.setMinutos(int(args%5B2%5D))%0A                relogio.setSegundos(int(args%5B3%5D))%0A            else:%0A                print(%22fail: comando inv%EC%B9%98lido, use set HH MM SS%22)%0A        elif cmd == 'next':%0A            relogio.NextSecond()%0A        else:%0A            print(%22fail: comando desconhecido%22)%0A%0Amain()%0A\n",
            "lines": "47"
        },
        {
            "label": "2025-10-21_14-59-14",
            "content": "@@ -485,17 +485,17 @@\n hora inv\n-a\n+%EC%B9%98\n lida%22)%0A \n@@ -641,25 +641,25 @@\n : minuto inv\n-a\n+%EC%B9%98\n lido%22)%0A%0A    \n@@ -803,25 +803,25 @@\n  segundo inv\n-a\n+%EC%B9%98\n lido%22)%0A%0A%0A   \n@@ -1798,17 +1798,17 @@\n ando inv\n-a\n+%EC%B9%98\n lido, us\n",
            "lines": "78"
        },
        {
            "label": "2025-10-21_14-59-45",
            "content": "@@ -1617,24 +1617,25 @@\n  relogio\n- = Watch\n+.setHoras\n (int(arg\n@@ -1643,24 +1643,95 @@\n %5B1%5D)\n-, int(args%5B2%5D), \n+)%0A                relogio.setMinutos(int(args%5B2%5D))%0A                relogio.setSegundos(\n int(\n",
            "lines": "78"
        },
        {
            "label": "2025-10-21_15-02-10",
            "content": "@@ -871,16 +871,17 @@\n _hora:02\n+d\n %7D:%7Bself.\n@@ -890,16 +890,17 @@\n inuto:02\n+d\n %7D:%7Bself.\n@@ -910,16 +910,17 @@\n gundo:02\n+d\n %7D%22%0A    %0A\n",
            "lines": "76"
        },
        {
            "label": "2025-10-21_15-03-01",
            "content": "@@ -361,21 +361,21 @@\n  def set\n-_h\n+H\n ora\n+s\n (self, h\n@@ -509,23 +509,23 @@\n  def set\n-_m\n+M\n inuto\n+s\n (self, m\n@@ -665,24 +665,24 @@\n  def set\n-_s\n+S\n egundo\n+s\n (self, s\n",
            "lines": "76"
        },
        {
            "label": "2025-10-21_15-04-37",
            "content": "@@ -81,109 +81,8 @@\n 0):%0A\n-        %0A        self._hora = 0%0A        self._minuto = 0%0A        self._segundo = 0%0A        %0A        %0A\n     \n@@ -871,17 +871,16 @@\n _hora:02\n-d\n %7D:%7Bself.\n@@ -889,17 +889,16 @@\n inuto:02\n-d\n %7D:%7Bself.\n@@ -908,17 +908,16 @@\n gundo:02\n-d\n %7D%22%0A    %0A\n",
            "lines": "76"
        },
        {
            "label": "2025-10-21_15-06-13",
            "content": "@@ -33,17 +33,23 @@\n lf, hora\n-=\n+:int = \n 0, minut\n@@ -49,17 +49,23 @@\n , minuto\n-=\n+:int = \n 0, segun\n@@ -66,17 +66,23 @@\n  segundo\n-=\n+:int = \n 0):%0A    \n@@ -89,47 +89,8 @@\n     \n-# inicializa sempre com valores v%C3%A1lidos\n %0A   \n@@ -160,25 +160,24 @@\n ndo = 0%0A\n-%0A\n         \n # usa os\n@@ -172,46 +172,17 @@\n     \n-# usa os setters para tentar atualizar\n+%0A        \n %0A   \n@@ -194,21 +194,21 @@\n self.set\n-_h\n+H\n ora\n+s\n (hora)%0A \n@@ -222,23 +222,23 @@\n self.set\n-_m\n+M\n inuto\n+s\n (minuto)\n@@ -254,24 +254,24 @@\n self.set\n-_s\n+S\n egundo\n+s\n (segundo\n@@ -276,34 +276,12 @@\n do)%0A\n-%0A\n     \n-# ===== GETTERS =====\n %0A   \n@@ -288,21 +288,21 @@\n  def get\n-_h\n+H\n ora\n+s\n (self):%0A\n@@ -327,16 +327,20 @@\n f._hora%0A\n+    \n %0A    def\n@@ -343,18 +343,17 @@\n  def get\n-_m\n+M\n inuto(se\n@@ -385,16 +385,20 @@\n _minuto%0A\n+    \n %0A    def\n@@ -401,24 +401,24 @@\n  def get\n-_s\n+S\n egundo\n+s\n (self):%0A\n@@ -450,48 +450,12 @@\n ndo%0A\n-%0A\n     \n-# ===== SETTERS COM VALIDA%C3%87%C3%83O =====\n %0A   \n@@ -594,16 +594,20 @@\n alida%22)%0A\n+    \n %0A    def\n@@ -921,34 +921,8 @@\n %22)%0A%0A\n-    # ===== toString =====\n %0A   \n@@ -1019,37 +1019,12 @@\n d%7D%22%0A\n-%0A\n     \n-# ===== nextSecond =====\n %0A   \n@@ -1028,17 +1028,17 @@\n     def \n-n\n+N\n extSecon\n@@ -1098,17 +1098,17 @@\n segundo \n-%3E\n+=\n = 60:%0A  \n@@ -1193,17 +1193,17 @@\n _minuto \n-%3E\n+=\n = 60:%0A  \n@@ -1299,9 +1299,9 @@\n ora \n-%3E\n+=\n = 24\n@@ -1342,39 +1342,8 @@\n  0%0A%0A\n-%0A# ===== MAIN INTERATIVO =====%0A\n def \n@@ -1375,35 +1375,8 @@\n ch()\n-  # rel%C3%B3gio padr%C3%A3o 00:00:00\n %0A%0A  \n@@ -1393,25 +1393,8 @@\n ue:%0A\n-        try:%0A    \n     \n@@ -1416,88 +1416,8 @@\n t()%0A\n-        except EOFError:%0A            break  # finaliza se n%C3%A3o houver mais input%0A\n     \n@@ -1430,19 +1430,19 @@\n int(\n-%22$%22\n+'$'\n  + line)\n   # \n@@ -1441,26 +1441,8 @@\n ine)\n-  # ecoa o comando\n %0A   \n@@ -1561,13 +1561,13 @@\n  == \n-%22end%22\n+'end'\n :%0A  \n@@ -1606,14 +1606,14 @@\n  == \n-%22\n+'\n show\n-%22\n+'\n :%0A  \n@@ -1640,25 +1640,8 @@\n gio)\n-  # chama __str__\n %0A   \n@@ -1661,302 +1661,13 @@\n  == \n-%22set%22:%0A            if len(args) == 4:%0A                relogio.set_hora(int(args%5B1%5D))%0A                relogio.set_minuto(int(args%5B2%5D))%0A                relogio.set_segundo(int(args%5B3%5D))%0A            else:%0A                print(%22fail: comando inv%C3%A1lido, use set HH MM SS%22)%0A        elif cmd == %22init%22\n+'set'\n :%0A  \n@@ -1831,9 +1831,9 @@\n  inv\n-%C3%A1\n+a\n lido\n@@ -1838,19 +1838,18 @@\n do, use \n-ini\n+se\n t HH MM \n@@ -1877,14 +1877,14 @@\n  == \n-%22\n+'\n next\n-%22\n+'\n :%0A  \n@@ -1901,17 +1901,17 @@\n relogio.\n-n\n+N\n extSecon\n@@ -1977,16 +1977,15 @@\n cido%22)%0A%0A\n-%0A\n main()%0A\n",
            "lines": "82"
        },
        {
            "label": "2025-10-21_15-06-36",
            "content": "@@ -59,24 +59,67 @@\n ndo=0):%0A    \n+    # inicializa sempre com valores v%C3%A1lidos\n %0A        sel\n@@ -182,16 +182,63 @@\n do = 0%0A%0A\n+        # usa os setters para tentar atualizar%0A\n         \n@@ -513,16 +513,55 @@\n egundo%0A%0A\n+    # ===== SETTERS COM VALIDA%C3%87%C3%83O =====\n %0A    def\n@@ -1015,16 +1015,42 @@\n lido%22)%0A%0A\n+    # ===== toString =====\n %0A    def\n@@ -1144,16 +1144,40 @@\n %7D%22%0A%0A    \n+# ===== nextSecond =====\n %0A    def\n@@ -1488,16 +1488,45 @@\n a = 0%0A%0A%0A\n+# ===== MAIN INTERATIVO =====\n %0Adef mai\n@@ -1553,16 +1553,41 @@\n atch()  \n+# rel%C3%B3gio padr%C3%A3o 00:00:00\n %0A%0A    wh\n",
            "lines": "98"
        },
        {
            "label": "2025-10-21_15-07-06",
            "content": "@@ -59,16 +59,21 @@\n ndo=0):%0A\n+    %0A\n         \n@@ -130,32 +130,33 @@\n lf._segundo = 0%0A\n+%0A\n         self.set\n@@ -234,16 +234,206 @@\n gundo)%0A%0A\n+    # ===== GETTERS =====%0A    def get_hora(self):%0A        return self._hora%0A%0A    def get_minuto(self):%0A        return self._minuto%0A%0A    def get_segundo(self):%0A        return self._segundo%0A%0A%0A\n     def \n@@ -448,16 +448,19 @@\n (self, h\n+ora\n ):%0A     \n@@ -471,16 +471,19 @@\n f 0 %3C= h\n+ora\n  %3C= 23:%0A\n@@ -508,16 +508,19 @@\n hora = h\n+ora\n %0A       \n@@ -594,16 +594,21 @@\n (self, m\n+inuto\n ):%0A     \n@@ -619,16 +619,21 @@\n f 0 %3C= m\n+inuto\n  %3C= 59:%0A\n@@ -660,16 +660,21 @@\n nuto = m\n+inuto\n %0A       \n@@ -751,16 +751,22 @@\n (self, s\n+egundo\n ):%0A     \n@@ -777,16 +777,22 @@\n f 0 %3C= s\n+egundo\n  %3C= 59:%0A\n@@ -820,16 +820,22 @@\n undo = s\n+egundo\n %0A       \n@@ -878,32 +878,136 @@\n ndo invalido%22)%0A%0A\n+%0A    def __str__(self):%0A        return f%22%7Bself._hora:02d%7D:%7Bself._minuto:02d%7D:%7Bself._segundo:02d%7D%22%0A%0A    %0A\n     def nextSeco\n@@ -1312,105 +1312,8 @@\n  0%0A%0A\n-    def __str__(self):%0A        return f%22%7Bself._hora:02d%7D:%7Bself._minuto:02d%7D:%7Bself._segundo:02d%7D%22%0A\n %0A%0Ade\n@@ -1343,16 +1343,19 @@\n  Watch()\n+  %0A\n %0A    whi\n@@ -1363,16 +1363,33 @@\n e True:%0A\n+        try:%0A    \n         \n@@ -1415,25 +1415,123 @@\n     \n-print(%22$%22 + line)\n+except EOFError:%0A            break  # finaliza se n%C3%A3o houver mais input%0A        print(%22$%22 + line)  # ecoa o comando\n %0A   \n@@ -1551,24 +1551,25 @@\n ine.split()%0A\n+%0A\n         if n\n@@ -1571,17 +1571,35 @@\n  if \n-not args:\n+len(args) == 0:%0A           \n  con\n@@ -1604,16 +1604,17 @@\n ontinue%0A\n+%0A\n         \n@@ -1725,16 +1725,33 @@\n relogio)\n+  # chama __str__\n %0A       \n@@ -1768,20 +1768,32 @@\n == %22set%22\n- and\n+:%0A            if\n  len(arg\n@@ -1805,32 +1805,36 @@\n  4:%0A            \n+    \n relogio.set_hora\n@@ -1852,32 +1852,36 @@\n %5D))%0A            \n+   \n+ \n relogio.set_minu\n@@ -1893,24 +1893,28 @@\n t(args%5B2%5D))%0A\n+    \n             \n@@ -1939,32 +1939,116 @@\n o(int(args%5B3%5D))%0A\n+            else:%0A                print(%22fail: comando inv%C3%A1lido, use set HH MM SS%22)%0A\n         elif cmd\n@@ -2061,12 +2061,24 @@\n nit%22\n- and\n+:%0A            if\n  len\n@@ -2082,32 +2082,36 @@\n len(args) == 4:%0A\n+    \n             relo\n@@ -2156,32 +2156,117 @@\n , int(args%5B3%5D))%0A\n+            else:%0A                print(%22fail: comando inv%C3%A1lido, use init HH MM SS%22)%0A\n         elif cmd\n@@ -2357,21 +2357,25 @@\n comando \n-inv%C3%A1l\n+desconhec\n ido%22)%0A%0A%0A\n",
            "lines": "97"
        },
        {
            "label": "2025-10-21_15-13-10",
            "content": "class Watch:\n    def __init__(self, hora=0, minuto=0, segundo=0):\n        self._hora = 0\n        self._minuto = 0\n        self._segundo = 0\n        self.set_hora(hora)\n        self.set_minuto(minuto)\n        self.set_segundo(segundo)\n\n    def set_hora(self, h):\n        if 0 <= h <= 23:\n            self._hora = h\n        else:\n            print(\"fail: hora invalida\")\n\n    def set_minuto(self, m):\n        if 0 <= m <= 59:\n            self._minuto = m\n        else:\n            print(\"fail: minuto invalido\")\n\n    def set_segundo(self, s):\n        if 0 <= s <= 59:\n            self._segundo = s\n        else:\n            print(\"fail: segundo invalido\")\n\n    def nextSecond(self):\n        self._segundo += 1\n        if self._segundo >= 60:\n            self._segundo = 0\n            self._minuto += 1\n            if self._minuto >= 60:\n                self._minuto = 0\n                self._hora += 1\n                if self._hora >= 24:\n                    self._hora = 0\n\n    def __str__(self):\n        return f\"{self._hora:02d}:{self._minuto:02d}:{self._segundo:02d}\"\n\n\ndef main():\n    relogio = Watch()\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split()\n        if not args: continue\n        cmd = args[0]\n\n        if cmd == \"end\":\n            break\n        elif cmd == \"show\":\n            print(relogio)\n        elif cmd == \"set\" and len(args) == 4:\n            relogio.set_hora(int(args[1]))\n            relogio.set_minuto(int(args[2]))\n            relogio.set_segundo(int(args[3]))\n        elif cmd == \"init\" and len(args) == 4:\n            relogio = Watch(int(args[1]), int(args[2]), int(args[3]))\n        elif cmd == \"next\":\n            relogio.nextSecond()\n        else:\n            print(\"fail: comando inv\u00e1lido\")\n\n\nmain()\n",
            "lines": "68"
        }
    ]
}