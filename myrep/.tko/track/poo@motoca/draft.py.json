{
    "patches": [
        {
            "label": "2025-10-27_19-13-13",
            "content": "@@ -1,3 +0,0 @@\n-%0Aq%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-27_19-13-25",
            "content": "@@ -1,296 +1,3 @@\n-class Pessoa%0A    def __init__(self, name:str, age:int):%0A        self.name = name%0A        self.age = age%0A%0A    def getName(self):%0A        return self.__name%0A    %0A    def getAge(self):%0A        return self.__age%0A    %0A    def __str__(self):%0A        return f%22%7Bself.name%7D:%7Bself.age%7D%22%0A    %0Aclass Motoca:\n+%0Aq\n %0A\n",
            "lines": "2"
        },
        {
            "label": "2025-10-27_19-15-21",
            "content": "@@ -293,845 +293,4 @@\n ca:%0A\n-    def __init__(self, potencia = 1, ):%0A        self.__potencia = potencia%0A        self.__time = 0%0A        self.__pessoa: Pessoa %7C None = None%0A%0A    def inserir(self, pessoa: Pessoa) -%3E bool:%0A        if self.__pessoa is not None:%0A            return False%0A        self.__pessoa = pessoa%0A        return True%0A    %0A    def __str__(self):%0A        if self.__pessoa is None:%0A            return f'power: %7Bself.__potencia%7D, time: %7Bself.__time%7D, person:(%7Bstr(self.__pessoa)%7D)'%0A        else:%0A            return f'power: %7Bself.__potencia%7D, time: %7Bself.__time%7D, person:(empty)'%0A        %0A    def remover(self):%0A        if self.__pessoa is None:%0A            print('fail: empty motorcycle')%0A            return None%0A        else:%0A            pessoa_removida = self.__pessoa%0A            self.__pessoa = None%0A            return pessoa_removida       %0A        %0A%0A\n",
            "lines": "15"
        },
        {
            "label": "2025-10-27_19-27-57",
            "content": "@@ -1132,110 +1132,6 @@\n     \n-%0A    def buyTime(self, time: int):%0A        self.__time += time%0A%0A    def drive(self, time: int):%0A        \n %0A%0A\n",
            "lines": "42"
        },
        {
            "label": "2025-10-27_19-39-56",
            "content": "@@ -1228,97 +1228,8 @@\n t):%0A\n-        if self.__time == 0:%0A            print('fail: time is empty')%0A            return%0A\n     \n",
            "lines": "47"
        },
        {
            "label": "2025-10-27_19-43-01",
            "content": "@@ -1317,116 +1317,8 @@\n urn%0A\n-        if self.__pessoa is None:%0A            print('fail: empty motorcycle')%0A            return%0A        if%0A\n     \n",
            "lines": "50"
        },
        {
            "label": "2025-10-27_19-46-31",
            "content": "@@ -1424,299 +1424,8 @@\n   if\n- self.__pessoa.getAge() %3E 10:%0A            print('fail: person too old to drive')%0A            return%0A        if time %3E= self.__time:%0A            print(f'fail: time finished after %7Bself.__time%7D minutes')%0A            self.__time = 0%0A        else:%0A            self.__time -= time%0A%0A        %0A    %0A\n %0A   \n",
            "lines": "54"
        },
        {
            "label": "2025-10-27_19-51-33",
            "content": "@@ -1714,72 +1714,8 @@\n     \n-def honk(self):%0A        return 'P' + 'e' * self.__potencia + 'm'\n %0A%0A  \n",
            "lines": "65"
        },
        {
            "label": "2025-10-27_20-10-36",
            "content": "@@ -1747,17 +1747,16 @@\n n 'P' + \n-(\n 'e' * se\n@@ -1772,1038 +1772,14 @@\n ncia\n-)\n  + 'm'\n-%0A    %0A%0Adef main():%0A    motoca = Motoca()%0A%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split()%0A    %0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == 'show':%0A            print(motoca)%0A        elif args%5B0%5D == 'init':%0A            potencia = int(args%5B1%5D)%0A            motoca = Motoca(potencia)%0A        elif args%5B0%5D == 'inserir':%0A            name = args%5B1%5D%0A            age = int(args%5B2%5D)%0A            pessoa = Pessoa(name, age)%0A            if not motoca.inserir(pessoa):%0A                print('fail: motorcycle already has a person')%0A        elif args%5B0%5D == 'remover':%0A            pessoa_removida = motoca.remover()%0A            if pessoa_removida is not None:%0A                print(f'removed person: %7Bpessoa_removida%7D')%0A        elif args%5B0%5D == 'buyTime':%0A            time = int(args%5B1%5D)%0A            motoca.buyTime(time)%0A        elif args%5B0%5D == 'drive':%0A            time = int(args%5B1%5D)%0A            motoca.drive(time)%0A        elif args%5B0%5D == 'honk':%0A            %0A%0Amain()\n %0A%0A  \n",
            "lines": "66"
        },
        {
            "label": "2025-10-27_20-11-46",
            "content": "@@ -2131,24 +2131,667 @@\n ia)%0A        \n+elif args%5B0%5D == 'inserir':%0A            name = args%5B1%5D%0A            age = int(args%5B2%5D)%0A            pessoa = Pessoa(name, age)%0A            if not motoca.inserir(pessoa):%0A                print('fail: motorcycle already has a person')%0A        elif args%5B0%5D == 'remover':%0A            pessoa_removida = motoca.remover()%0A            if pessoa_removida is not None:%0A                print(f'removed person: %7Bpessoa_removida%7D')%0A        elif args%5B0%5D == 'buyTime':%0A            time = int(args%5B1%5D)%0A            motoca.buyTime(time)%0A        elif args%5B0%5D == 'drive':%0A            time = int(args%5B1%5D)%0A            motoca.drive(time)%0A        elif args%5B0%5D == 'honk':\n %0A           \n",
            "lines": "103"
        },
        {
            "label": "2025-10-27_20-12-05",
            "content": "@@ -1967,108 +1967,8 @@\n eak%0A\n-        elif args%5B0%5D == 'init':%0A            power = int(args%5B1%5D)%0A            motoca = Motoca(power)%0A\n     \n@@ -2046,19 +2046,20 @@\n %5B0%5D == '\n-buy\n+init\n ':%0A     \n@@ -2065,20 +2065,24 @@\n         \n-time\n+potencia\n  = int(a\n@@ -2111,21 +2111,26 @@\n toca\n-.buyTime(time\n+ = Motoca(potencia\n )%0A  \n",
            "lines": "87"
        },
        {
            "label": "2025-10-27_20-13-09",
            "content": "@@ -2229,461 +2229,8 @@\n     \n-elif args%5B0%5D == 'enter':%0A            name = args%5B1%5D%0A            age = int(args%5B2%5D)%0A            pessoa = Pessoa(name, age)%0A            motoca.inserir(pessoa)%0A        elif args%5B0%5D == 'leave':%0A            pessoa = motoca.remover()%0A            if pessoa is not None:%0A                print(pessoa)%0A        elif args%5B0%5D == 'drive':%0A            time = int(args%5B1%5D)%0A            motoca.drive(time)%0A        elif args%5B0%5D == 'honk':%0A            print(motoca.honk())\n %0A   \n@@ -2234,16 +2234,21 @@\n         \n+    %0A\n %0Amain()%0A\n",
            "lines": "90"
        },
        {
            "label": "2025-10-27_20-20-26",
            "content": "@@ -5,17 +5,16 @@\n s Pessoa\n-:\n %0A    def\n",
            "lines": "102"
        },
        {
            "label": "2025-10-27_20-20-37",
            "content": "@@ -1,2719 +1,161 @@\n-class Pessoa:%0A    def __init__(self, name:str, age:int):%0A        self.name = name%0A        self.age = age%0A%0A    def getName(self):%0A        return self.__name%0A    %0A    def getAge(self):%0A        return self.__age%0A    %0A    def __str__(self):%0A        return f%22%7Bself.name%7D:%7Bself.age%7D%22%0A    %0Aclass Motoca:%0A    def __init__(self, potencia = 1, ):%0A        self.__potencia = potencia%0A        self.__time = 0%0A        self.__pessoa: Pessoa %7C None = None%0A%0A    def inserir(self, pessoa: Pessoa) -%3E bool:%0A        if self.__pessoa is not None:%0A            return False%0A        self.__pessoa = pessoa%0A        return True%0A    %0A    def __str__(self):%0A        if self.__pessoa is None:%0A            return f'power:%7Bself.__potencia%7D,time: %7Bself.__time%7D, person:(empty)'%0A        else:%0A            return f'power:%7Bself.__potencia%7D,time: %7Bself.__time%7D, person:(%7Bstr(self.__pessoa)%7D)'%0A        %0A        %0A    def remover(self):%0A        if self.__pessoa is None:%0A            print('fail: empty motorcycle')%0A            return None%0A        else:%0A            pessoa_removida = self.__pessoa%0A            self.__pessoa = None%0A            return pessoa_removida       %0A        %0A    def buyTime(self, time: int):%0A        self.__time += time%0A%0A    def drive(self, time: int):%0A        if self.__time == 0:%0A            print('fail: time is empty')%0A            return%0A        if self.__pessoa is None:%0A            print('fail: empty motorcycle')%0A            return%0A        if self.__pessoa.getAge() %3E 10:%0A            print('fail: person too old to drive')%0A            return%0A        if time %3E= self.__time:%0A            print(f'fail: time finished after %7Bself.__time%7D minutes')%0A            self.__time = 0%0A        else:%0A            self.__time -= time%0A%0A        %0A    def honk(self):%0A        return 'P' + ('e' * self.__potencia) + 'm'%0A    %0A%0Adef main():%0A    motoca = Motoca()%0A%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args = line.split()%0A    %0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == 'init':%0A            power = int(args%5B1%5D)%0A            motoca = Motoca(power)%0A        elif args%5B0%5D == 'show':%0A            print(motoca)%0A        elif args%5B0%5D == 'buy':%0A            time = int(args%5B1%5D)%0A            motoca.buyTime(time)%0A        elif args%5B0%5D == 'enter':%0A            name = args%5B1%5D%0A            age = int(args%5B2%5D)%0A            pessoa = Pessoa(name, age)%0A            motoca.inserir(pessoa)%0A        elif args%5B0%5D == 'leave':%0A            pessoa = motoca.remover()%0A            if pessoa is not None:%0A                print(pessoa)%0A        elif args%5B0%5D == 'drive':%0A            time = int(args%5B1%5D)%0A            motoca.drive(time)%0A        elif args%5B0%5D == 'honk':%0A            print(motoca.honk())%0A        %0Amain()%0A%0A        %0A\n+@@ -733,21 +733,36 @@%0A person:(%0A-empty%0A+%257Bstr(self.__pessoa)%257D%0A )'%250A     %0A@@ -850,39 +850,15 @@%0A on:(%0A-%257Bstr(self.__pessoa)%257D)'%250A        %0A+empty)'%0A %250A   \n %0A\n",
            "lines": "10"
        },
        {
            "label": "2025-10-27_20-23-59",
            "content": "@@ -694,33 +694,32 @@\n elf.__potencia%7D,\n- \n time: %7Bself.__ti\n@@ -798,17 +798,16 @@\n tencia%7D,\n- \n time: %7Bs\n",
            "lines": "103"
        },
        {
            "label": "2025-10-27_20-24-14",
            "content": "@@ -700,32 +700,33 @@\n potencia%7D, time:\n+ \n %7Bself.__time%7D, p\n@@ -805,16 +805,17 @@\n %7D, time:\n+ \n %7Bself.__\n",
            "lines": "103"
        },
        {
            "label": "2025-10-27_20-24-23",
            "content": "@@ -523,51 +523,8 @@\n ne:%0A\n-            print(%22fail: busy motorcycle%22)%0A\n     \n",
            "lines": "103"
        },
        {
            "label": "2025-10-27_20-25-13",
            "content": "@@ -1330,23 +1330,22 @@\n ail:\n- buy\n  time \n-first\n+is empty\n ')%0A \n",
            "lines": "104"
        },
        {
            "label": "2025-10-27_20-25-38",
            "content": "@@ -59,26 +59,24 @@\n        self.\n-__\n name = name%0A\n@@ -88,18 +88,16 @@\n    self.\n-__\n age = ag\n",
            "lines": "104"
        },
        {
            "label": "2025-10-27_20-30-37",
            "content": "@@ -253,26 +253,24 @@\n urn f%22%7Bself.\n-__\n name%7D:%7Bself.\n@@ -269,18 +269,16 @@\n %7D:%7Bself.\n-__\n age%7D%22%0A  \n",
            "lines": "104"
        },
        {
            "label": "2025-10-27_20-31-05",
            "content": "@@ -1532,16 +1532,23 @@\n t('fail:\n+ person\n  too old\n",
            "lines": "104"
        },
        {
            "label": "2025-10-27_20-31-21",
            "content": "class Pessoa:\n    def __init__(self, name:str, age:int):\n        self.__name = name\n        self.__age = age\n\n    def getName(self):\n        return self.__name\n    \n    def getAge(self):\n        return self.__age\n    \n    def __str__(self):\n        return f\"{self.__name}:{self.__age}\"\n    \nclass Motoca:\n    def __init__(self, potencia = 1, ):\n        self.__potencia = potencia\n        self.__time = 0\n        self.__pessoa: Pessoa | None = None\n\n    def inserir(self, pessoa: Pessoa) -> bool:\n        if self.__pessoa is not None:\n            print(\"fail: busy motorcycle\")\n            return False\n        self.__pessoa = pessoa\n        return True\n    \n    def __str__(self):\n        if self.__pessoa is None:\n            return f'power:{self.__potencia}, time:{self.__time}, person:(empty)'\n        else:\n            return f'power:{self.__potencia}, time:{self.__time}, person:({str(self.__pessoa)})'\n        \n        \n    def remover(self):\n        if self.__pessoa is None:\n            print('fail: empty motorcycle')\n            return None\n        else:\n            pessoa_removida = self.__pessoa\n            self.__pessoa = None\n            return pessoa_removida       \n        \n    def buyTime(self, time: int):\n        self.__time += time\n\n    def drive(self, time: int):\n        if self.__time == 0:\n            print('fail: buy time first')\n            return\n        if self.__pessoa is None:\n            print('fail: empty motorcycle')\n            return\n        if self.__pessoa.getAge() > 10:\n            print('fail: too old to drive')\n            return\n        if time >= self.__time:\n            print(f'fail: time finished after {self.__time} minutes')\n            self.__time = 0\n        else:\n            self.__time -= time\n\n        \n    def honk(self):\n        return 'P' + ('e' * self.__potencia) + 'm'\n    \n\ndef main():\n    motoca = Motoca()\n\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split()\n    \n        if args[0] == \"end\":\n            break\n        elif args[0] == 'init':\n            power = int(args[1])\n            motoca = Motoca(power)\n        elif args[0] == 'show':\n            print(motoca)\n        elif args[0] == 'buy':\n            time = int(args[1])\n            motoca.buyTime(time)\n        elif args[0] == 'enter':\n            name = args[1]\n            age = int(args[2])\n            pessoa = Pessoa(name, age)\n            motoca.inserir(pessoa)\n        elif args[0] == 'leave':\n            pessoa = motoca.remover()\n            if pessoa is not None:\n                print(pessoa)\n        elif args[0] == 'drive':\n            time = int(args[1])\n            motoca.drive(time)\n        elif args[0] == 'honk':\n            print(motoca.honk())\n        \nmain()\n\n        \n\n",
            "lines": "104"
        }
    ]
}