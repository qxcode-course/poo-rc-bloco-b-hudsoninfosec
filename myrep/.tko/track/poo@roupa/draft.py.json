{
    "patches": [
        {
            "label": "2025-10-16_01-22-27",
            "content": "@@ -1,19 +1,20 @@\n %0Aclass \n-Roup\n+Camis\n a:%0A    d\n@@ -487,59 +487,18 @@\n int(\n-%22fail: Valor inv%C3%A1lido, tente PP, P, M, G, GG ou XG%22\n+'Inv%C3%A1lido'\n )%0A  \n@@ -575,530 +575,360 @@\n  %0A %0A\n-def main():%0A    %0A    roupa = Roupa() %0A%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split()%0A%0A        if len(args) == 0:%0A            continue%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(f%22size: (%7Broupa.getTamanho%7D)%22)%0A        elif args%5B0%5D == %22size%22:%0A            if len(args) %3E 1:%0A                roupa.setTamanho(args%5B1%5D)%0A            else:%0A                print(%22fail: Valor inv%C3%A1lido, tente PP, P, M, G, GG ou XG%22)%0Amain()%0A%0A%0A\n+# loop principal%0Aroupa = Camisa() # criando roupa com valor tamanho padr%C3%A3o%0A%0Awhile roupa.getTamanho() == %22%22: # mantendo usu%C3%A1rio no loop%0A    print(%22Digite seu tamanho de roupa%22)%0A    tamanho = input() # lendo a resposta%0A    roupa.setTamanho(tamanho) # tentando atribuir e disparando erros%0A%0Aprint(%22Parabens, voc%C3%AA comprou uma roupa tamanho%22, roupa.getTamanho())\n",
            "lines": "25"
        },
        {
            "label": "2025-10-18_00-37-22",
            "content": "@@ -926,18 +926,16 @@\n tTamanho\n-()\n %7D)%22)%0A   \n",
            "lines": "39"
        },
        {
            "label": "2025-10-18_00-38-41",
            "content": "@@ -907,16 +907,17 @@\n (f%22size:\n+ \n (%7Broupa.\n",
            "lines": "39"
        },
        {
            "label": "2025-10-18_00-39-04",
            "content": "@@ -907,17 +907,16 @@\n (f%22size:\n- \n (%7Broupa.\n",
            "lines": "39"
        },
        {
            "label": "2025-10-18_00-41-19",
            "content": "@@ -545,32 +545,56 @@\n       else:%0A    \n+        print('V%C3%A1lido')%0A\n         self.__t\n",
            "lines": "39"
        },
        {
            "label": "2025-10-18_00-42-18",
            "content": "\nclass Roupa:\n    def __init__(self): # isso \u00e9 o construtor em python\n        self.__tamanho: str = \"\" # atributos em python com __ na frente s\u00e3o privados\n\n    def getTamanho(self) -> str: # m\u00e9todos em python tem self como primeiro atributo\n        return self.__tamanho\n\n    def setTamanho(self, valor: str):  \n        valor = valor.upper()  # implementar os testes de valor e disparar os avisos caso necess\u00e1rio\n        if valor not in ['PP','P', 'M', 'G', 'GG', 'XG']:\n            print(\"fail: Valor inv\u00e1lido, tente PP, P, M, G, GG ou XG\")\n        else:\n            self.__tamanho = valor \n \ndef main():\n    \n    roupa = Roupa() \n\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args: list[str] = line.split()\n\n        if len(args) == 0:\n            continue\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            print(f\"size: ({roupa.getTamanho()})\")\n        elif args[0] == \"size\":\n            if len(args) > 1:\n                roupa.setTamanho(args[1])\n            else:\n                print(\"fail: Valor inv\u00e1lido, tente PP, P, M, G, GG ou XG\")\nmain()\n\n\n",
            "lines": "38"
        }
    ]
}