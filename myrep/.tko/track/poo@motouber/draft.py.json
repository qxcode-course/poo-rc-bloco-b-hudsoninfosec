{
    "patches": [
        {
            "label": "2025-10-27_20-32-56",
            "content": "@@ -1,580 +0,0 @@\n-class Pessoa:%0A    def __init__(self, nome:str, dinheiro:float):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def getNome(self):%0A        return self.__nome%0A    %0A    def getDinheiro(self):%0A        return self.__dinheiro %0A    %0A    def pagar(self, valor:float):%0A        if valor %3C= self.__dinheiro:%0A            self.__dinheiro -= valor%0A            return valor%0A        else:%0A            pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return pago%0A        %0A    def receber(self, valor:int):%0A        self.__dinheiro += valor%0A                    \n",
            "lines": "0"
        },
        {
            "label": "2025-10-27_21-38-11",
            "content": "@@ -557,1083 +557,8 @@\n lor%0A\n-%0A    def __str__(self):%0A        if self.__dinheiro.is_integer():%0A            return f'%7Bself.__nome%7D:%7Bint(self.__dinheiro)%7D'%0A        else:%0A            return f'%7Bself.__nome%7D:%7Bself.__dinheiro%7D'%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__custo = 0%0A        self.__passa: Pessoa %7C None = None%0A        self.__motorista: Pessoa %7C None = None%0A%0A    def setDrive(self, pessoas:Pessoa):%0A        self.__motorista = pessoas%0A    def subirMotorista(self, pessoa:Pessoa):%0A        if self.__motorista is not None:%0A            print(%22fail: no driver%22)%0A            return False   %0A        self.__motorista = pessoa%0A%0A    def descerMotorista(self):%0A        if self.__motorista is None:%0A            print(%22fail: no driver%22)%0A            return%0A        self.__motorista = pessoa%0A%0A    def subirPass(self, pessoa: Pessoa):%0A        if self.__passa is not None:%0A            print(%22fail: nao tem passageiro%22)%0A            return%0A        if self.__motorista is None:%0A            print(%22fail: no driver%22)%0A            return%0A        self.__passa = pessoa%0A        self.__custo = 0%0A       %0A%0A        %0A%0A\n     \n",
            "lines": "23"
        },
        {
            "label": "2025-10-27_22-00-20",
            "content": "@@ -1613,168 +1613,15 @@\n = 0%0A\n-%0A\n        \n- def dirigir(self, km: float):%0A            if self.__passa is None:%0A                print(%22fail: nao ha passageiro para dirigir%22)%0A                return\n %0A%0A  \n",
            "lines": "63"
        },
        {
            "label": "2025-10-27_22-01-59",
            "content": "@@ -1773,75 +1773,8 @@\n turn\n-%0A        self.__custo += km * 1%0A%0A        def leavePassageiro(self):\n %0A%0A  \n",
            "lines": "67"
        },
        {
            "label": "2025-10-27_22-48-19",
            "content": "@@ -1840,1759 +1840,8 @@\n lf):\n-%0A            if self.__passa is None:%0A                print(%22fail: n%C3%A3o tem passageiro%22)%0A                return%0A%0A            pagamento = self.__custo%0A            pago = self.__passa.pagar(pagamento)%0A%0A            if pago %3C pagamento:%0A                print(%22fail: Passenger does not have enough money%22)%0A%0A            if self.__motorista is not None:%0A                self.__motorista.receber(pagamento)%0A%0A            print(f%22%7Bself.__passa.getNome()%7D:%7Bint(self.__passa.getDinheiro())%7D left%22)%0A            self.__passa = None%0A            self.__custo = 0%0A%0A        def __str__(self):%0A            motorista = str(self.__motorista) if self.__motorista else %22None%22%0A            passa = str(self.__passa) if self.__passa else %22None%22%0A            return f%22Cost: %7Bint(self.__custo)%7D, Driver: %7Bmotorista%7D, Passenger: %7Bpassa%7D%22%0A%0A        def getMotorista(self):%0A            pass%0A%0A%0Adef main():%0A    moto = Moto()%0A    pessoas = %7B%7D%0A%0A    while True:%0A        line =  input()%0A        print(%22$%22 + line)%0A        args = line.split()%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22setDriver%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            if nome not in pessoas:%0A                pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A            moto.subirMotorista(pessoas%5Bnome%5D)%0A        elif args%5B0%5D == %22setPass%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            if nome not in pessoas:%0A                pessoas%5Bnome%5D = Pessoa(nome, dinheiro)%0A            moto.subirPass(pessoas%5Bnome%5D)%0A        elif args%5B0%5D == %22drive%22:%0A            km = float(args%5B1%5D)%0A            moto.dirigir(km)%0A        elif args%5B0%5D == %22leavePass%22:%0A            moto.leavePassageiro()%0A        elif args%5B0%5D == %22show%22:%0A%0A            print(moto)%0Amain()\n %0A%0A  \n",
            "lines": "70"
        },
        {
            "label": "2025-10-27_22-49-13",
            "content": "@@ -2694,16 +2694,17 @@\n   pass%0A%0A\n+%0A\n def main\n",
            "lines": "128"
        },
        {
            "label": "2025-10-27_22-49-21",
            "content": "@@ -35,17 +35,16 @@\n f, nome:\n- \n str, din\n@@ -49,17 +49,16 @@\n inheiro:\n- \n float):%0A\n@@ -170,16 +170,20 @@\n .__nome%0A\n+    \n %0A    def\n@@ -224,33 +224,38 @@\n  self.__dinheiro\n-%0A\n+ %0A    \n %0A    def pagar(s\n@@ -257,33 +257,32 @@\n gar(self, valor:\n- \n float):%0A        \n@@ -477,16 +477,24 @@\n rn pago%0A\n+        \n %0A    def\n@@ -514,21 +514,18 @@\n , valor:\n- floa\n+in\n t):%0A    \n@@ -588,22 +588,16 @@\n      if \n-float(\n self.__d\n@@ -603,17 +603,16 @@\n dinheiro\n-)\n .is_inte\n@@ -746,17 +746,16 @@\n eiro%7D'%0A%0A\n-%0A\n class Mo\n@@ -890,32 +890,107 @@\n  %7C None = None%0A%0A\n+    def setDrive(self, pessoas:Pessoa):%0A        self.__motorista = pessoas%0A\n     def subirMot\n@@ -1001,33 +1001,32 @@\n ta(self, pessoa:\n- \n Pessoa):%0A       \n@@ -1084,27 +1084,18 @@\n (%22fail: \n-already has\n+no\n  driver%22\n@@ -1106,32 +1106,41 @@\n           return\n+ False   \n %0A        self.__\n@@ -1310,20 +1310,22 @@\n rista = \n-None\n+pessoa\n %0A%0A    de\n@@ -1425,29 +1425,26 @@\n il: \n-already has passenger\n+nao tem passageiro\n %22)%0A \n@@ -1602,32 +1602,36 @@\n lf.__custo = 0%0A%0A\n+    \n     def dirigir(\n@@ -1648,32 +1648,36 @@\n float):%0A        \n+    \n if self.__passa \n@@ -1677,32 +1677,36 @@\n _passa is None:%0A\n+    \n             prin\n@@ -1719,31 +1719,44 @@\n l: n\n-o passenger to drive%22)%0A\n+ao ha passageiro para dirigir%22)%0A    \n     \n@@ -1804,27 +1804,14 @@\n  * 1\n-  # 1 real por km%0A%0A\n+%0A%0A    \n     \n@@ -1837,32 +1837,36 @@\n (self):%0A        \n+    \n if self.__passa \n@@ -1878,32 +1878,36 @@\n ne:%0A            \n+  \n+  \n print(%22fail: no \n@@ -1908,19 +1908,25 @@\n l: n\n+%C3%A3\n o \n-passenger\n+tem passageiro\n %22)%0A \n@@ -1940,16 +1940,20 @@\n     \n+    \n return%0A%0A\n     \n@@ -1948,16 +1948,20 @@\n return%0A%0A\n+    \n         \n@@ -1985,16 +1985,20 @@\n __custo%0A\n+    \n         \n@@ -2043,16 +2043,20 @@\n         \n+    \n if pago \n@@ -2072,32 +2072,36 @@\n to:%0A            \n+    \n print(%22fail: pas\n@@ -2097,17 +2097,17 @@\n (%22fail: \n-p\n+P\n assenger\n@@ -2112,10 +2112,11 @@\n er d\n-id\n+oes\n  not\n@@ -2137,16 +2137,20 @@\n oney%22)%0A%0A\n+    \n         \n@@ -2174,32 +2174,36 @@\n ta is not None:%0A\n+    \n             self\n@@ -2226,20 +2226,29 @@\n eber(pag\n-o)%0A%0A\n+amento)%0A%0A    \n         \n@@ -2321,32 +2321,36 @@\n  left%22)%0A        \n+   \n+ \n self.__passa = N\n@@ -2353,32 +2353,36 @@\n  = None%0A        \n+    \n self.__custo = 0\n@@ -2383,24 +2383,28 @@\n to = 0%0A%0A    \n+ \n+   \n def __str__(\n@@ -2414,24 +2414,28 @@\n f):%0A        \n+   \n+ \n motorista = \n@@ -2496,16 +2496,20 @@\n         \n+    \n passa = \n@@ -2554,32 +2554,36 @@\n  %22None%22%0A        \n+ \n+   \n return f%22Cost: %7B\n@@ -2644,16 +2644,65 @@\n assa%7D%22%0A%0A\n+        def getMotorista(self):%0A            pass%0A\n %0Adef mai\n@@ -2772,16 +2772,17 @@\n   line =\n+ \n  input()\n@@ -3555,16 +3555,17 @@\n %22show%22:%0A\n+%0A\n         \n@@ -3584,12 +3584,42 @@\n to)%0A\n-%0A\n main()%0A\n+%0A        %0A%0A                    \n",
            "lines": "127"
        },
        {
            "label": "2025-10-27_22-50-28",
            "content": "@@ -1975,17 +1975,17 @@\n (%22fail: \n-P\n+p\n assenger\n",
            "lines": "120"
        },
        {
            "label": "2025-10-27_22-51-12",
            "content": "@@ -1990,11 +1990,14 @@\n er d\n-oes\n+id not\n  hav\n",
            "lines": "120"
        },
        {
            "label": "2025-10-27_22-51-35",
            "content": "@@ -1990,20 +1990,16 @@\n er does \n-not \n have eno\n",
            "lines": "120"
        },
        {
            "label": "2025-10-27_22-52-50",
            "content": "@@ -1908,24 +1908,29 @@\n sa.pagar(pag\n+ament\n o)%0A%0A        \n",
            "lines": "120"
        },
        {
            "label": "2025-10-27_22-54-58",
            "content": "@@ -1912,21 +1912,16 @@\n agar(pag\n-ament\n o)%0A%0A    \n",
            "lines": "120"
        },
        {
            "label": "2025-10-27_22-55-21",
            "content": "@@ -2092,29 +2092,24 @@\n .receber(pag\n-ament\n o)%0A%0A        \n",
            "lines": "120"
        },
        {
            "label": "2025-10-27_23-00-24",
            "content": "@@ -1701,16 +1701,31 @@\n km * 1  \n+# 1 real por km\n %0A%0A    de\n",
            "lines": "120"
        },
        {
            "label": "2025-10-27_23-00-34",
            "content": "class Pessoa:\n    def __init__(self, nome: str, dinheiro: float):\n        self.__nome = nome\n        self.__dinheiro = dinheiro\n\n    def getNome(self):\n        return self.__nome\n\n    def getDinheiro(self):\n        return self.__dinheiro\n\n    def pagar(self, valor: float):\n        if valor <= self.__dinheiro:\n            self.__dinheiro -= valor\n            return valor\n        else:\n            pago = self.__dinheiro\n            self.__dinheiro = 0\n            return pago\n\n    def receber(self, valor: float):\n        self.__dinheiro += valor\n\n    def __str__(self):\n        if float(self.__dinheiro).is_integer():\n            return f'{self.__nome}:{int(self.__dinheiro)}'\n        else:\n            return f'{self.__nome}:{self.__dinheiro}'\n\n\nclass Moto:\n    def __init__(self):\n        self.__custo = 0\n        self.__passa: Pessoa | None = None\n        self.__motorista: Pessoa | None = None\n\n    def subirMotorista(self, pessoa: Pessoa):\n        if self.__motorista is not None:\n            print(\"fail: already has driver\")\n            return\n        self.__motorista = pessoa\n\n    def descerMotorista(self):\n        if self.__motorista is None:\n            print(\"fail: no driver\")\n            return\n        self.__motorista = None\n\n    def subirPass(self, pessoa: Pessoa):\n        if self.__passa is not None:\n            print(\"fail: already has passenger\")\n            return\n        if self.__motorista is None:\n            print(\"fail: no driver\")\n            return\n        self.__passa = pessoa\n        self.__custo = 0\n\n    def dirigir(self, km: float):\n        if self.__passa is None:\n            print(\"fail: no passenger to drive\")\n            return\n        self.__custo += km * 1  \n\n    def leavePassageiro(self):\n        if self.__passa is None:\n            print(\"fail: no passenger\")\n            return\n\n        pagamento = self.__custo\n        pago = self.__passa.pagar(pagamento)\n\n        if pago < pagamento:\n            print(\"fail: Passenger does not have enough money\")\n\n        if self.__motorista is not None:\n            self.__motorista.receber(pagamento)\n\n        print(f\"{self.__passa.getNome()}:{int(self.__passa.getDinheiro())} left\")\n        self.__passa = None\n        self.__custo = 0\n\n    def __str__(self):\n        motorista = str(self.__motorista) if self.__motorista else \"None\"\n        passa = str(self.__passa) if self.__passa else \"None\"\n        return f\"Cost: {int(self.__custo)}, Driver: {motorista}, Passenger: {passa}\"\n\n\ndef main():\n    moto = Moto()\n    pessoas = {}\n\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"setDriver\":\n            nome = args[1]\n            dinheiro = float(args[2])\n            if nome not in pessoas:\n                pessoas[nome] = Pessoa(nome, dinheiro)\n            moto.subirMotorista(pessoas[nome])\n        elif args[0] == \"setPass\":\n            nome = args[1]\n            dinheiro = float(args[2])\n            if nome not in pessoas:\n                pessoas[nome] = Pessoa(nome, dinheiro)\n            moto.subirPass(pessoas[nome])\n        elif args[0] == \"drive\":\n            km = float(args[1])\n            moto.dirigir(km)\n        elif args[0] == \"leavePass\":\n            moto.leavePassageiro()\n        elif args[0] == \"show\":\n            print(moto)\n\nmain()\n",
            "lines": "120"
        }
    ]
}